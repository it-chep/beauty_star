# Generated by Django 4.2.13 on 2024-08-05 14:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import main_site.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('phone', models.CharField(blank=True, default='', max_length=30, null=True, validators=[django.core.validators.RegexValidator(message='Телефон должен состоять из цифр +-(). Введите корректный номер телефона.', regex='[0-9( )\\-+]{6,20}')], verbose_name='Номер телефона')),
                ('first_name', models.CharField(default='', max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(default='', max_length=255, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, default='', max_length=255, verbose_name='Отчество')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата начала')),
            ],
            options={
                'verbose_name': 'Календарь',
                'verbose_name_plural': 'Календари',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название услуги')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='Цена от')),
                ('time_over', models.IntegerField(default=30, verbose_name='Количество времени (в минутах)')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='ServiceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название группы услуг')),
            ],
            options={
                'verbose_name': 'Группа услуг',
                'verbose_name_plural': 'Группы услуг',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя специалиста')),
                ('surname', models.CharField(max_length=255, verbose_name='Фамилия специалиста')),
                ('photo', models.ImageField(upload_to=main_site.models.upload_to_worker_photo, verbose_name='Фото')),
                ('services', models.ManyToManyField(to='main_site.service', verbose_name='Услуги специалиста')),
            ],
            options={
                'verbose_name': 'Специалист',
                'verbose_name_plural': 'Специалисты',
            },
        ),
        migrations.CreateModel(
            name='ServiceSubGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название подгруппы услуг')),
                ('service_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subgroups', to='main_site.servicegroup', verbose_name='Группа услуг')),
            ],
            options={
                'verbose_name': 'Подгруппа услуг',
                'verbose_name_plural': 'Подгруппы услуг',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='subgroup',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='main_site.servicesubgroup'),
        ),
        migrations.CreateModel(
            name='SchedulePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time_start', models.TimeField(verbose_name='Время начала')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='main_site.schedule', verbose_name='Календарь')),
            ],
            options={
                'verbose_name': 'Календарный слот',
                'verbose_name_plural': 'Календарные слоты',
            },
        ),
        migrations.AddField(
            model_name='schedule',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='main_site.service', verbose_name='Услуга'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='main_site.worker', verbose_name='Специалист'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(1, 'Новый'), (2, 'Не состоялся'), (3, 'Отменен'), (4, 'Завершен')], default=1, verbose_name='Статус')),
                ('comment', models.TextField(verbose_name='Комментарий клиента')),
                ('notification_choice', models.SmallIntegerField(choices=[(0, 'Не напоминать'), (1, 'За 1 час'), (2, 'За 2 часа'), (3, 'За 3 часа'), (4, 'За 4 часа'), (5, 'За 6 часов'), (6, 'За 24 часа')], default=0, verbose_name='Напоминание')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=16, null=True, verbose_name='Стоимость от')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('draft', models.BooleanField(default=True, verbose_name='Черновик')),
                ('schedule_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='main_site.scheduleperiod', verbose_name='Календарный слот')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Онлайн-запись',
                'verbose_name_plural': 'Онлайн-записи',
            },
        ),
    ]
